diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..6c83cff
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,22 @@
+*.d
+*.o
+*.out
+
+# binaries and .asm files
+bootblock 
+entryother
+initcode
+kernel
+mkfs 
+kernel.sym
+xv6.img
+fs.img
+_*
+*.asm
+vectors.S 
+*.sym
+
+# Test files
+Makefile.test
+test*.c
+tests-out/
\ No newline at end of file
diff --git a/ls.c b/ls.c
index 2862913..5b97cfe 100644
--- a/ls.c
+++ b/ls.c
@@ -41,6 +41,7 @@ ls(char *path)
     return;
   }
 
+  printf(1, "Sadman did ls!!!\n");
   switch(st.type){
   case T_FILE:
     printf(1, "%s %d %d %d\n", fmtname(path), st.type, st.ino, st.size);
diff --git a/syscall.c b/syscall.c
index ee85261..9662969 100644
--- a/syscall.c
+++ b/syscall.c
@@ -82,6 +82,8 @@ argstr(int n, char **pp)
   return fetchstr(addr, pp);
 }
 
+extern int sys_trace(void);
+extern int sys_getcount(void);
 extern int sys_chdir(void);
 extern int sys_close(void);
 extern int sys_dup(void);
@@ -105,6 +107,8 @@ extern int sys_write(void);
 extern int sys_uptime(void);
 
 static int (*syscalls[])(void) = {
+[SYS_trace] sys_trace,
+[SYS_getcount] sys_getcount,
 [SYS_fork]    sys_fork,
 [SYS_exit]    sys_exit,
 [SYS_wait]    sys_wait,
diff --git a/syscall.h b/syscall.h
index bc5f356..746394c 100644
--- a/syscall.h
+++ b/syscall.h
@@ -1,4 +1,6 @@
 // System call numbers
+#define SYS_trace 23
+#define SYS_getcount 22
 #define SYS_fork    1
 #define SYS_exit    2
 #define SYS_wait    3
diff --git a/sysfile.c b/sysfile.c
index bfe61b7..5a5e939 100644
--- a/sysfile.c
+++ b/sysfile.c
@@ -282,6 +282,47 @@ create(char *path, short type, short major, short minor)
   return ip;
 }
 
+char*
+mystrcpy(char *s, const char *t)
+{
+  char *os;
+
+  os = s;
+  while((*s++ = *t++) != 0)
+    ;
+  return os;
+}
+
+int
+mystrcmp(const char *p, const char *q)
+{
+  while(*p && *p == *q)
+    p++, q++;
+  return (uchar)*p - (uchar)*q;
+}
+
+char trace_pathname[300];
+int trace_cnt = 0;
+
+int 
+sys_trace(void)
+{
+  char *path;
+
+  if(argstr(0, &path) < 0)
+    return -1;
+    
+  mystrcpy(trace_pathname, path);
+  trace_cnt = 0;
+  return 0;
+}
+
+int 
+sys_getcount(void)
+{
+  return trace_cnt;
+}
+
 int
 sys_open(void)
 {
@@ -293,6 +334,10 @@ sys_open(void)
   if(argstr(0, &path) < 0 || argint(1, &omode) < 0)
     return -1;
 
+  if(mystrcmp(trace_pathname, path) == 0) {
+    trace_cnt++;
+  }
+
   begin_op();
 
   if(omode & O_CREATE){
diff --git a/user.h b/user.h
index 4f99c52..1054d19 100644
--- a/user.h
+++ b/user.h
@@ -2,6 +2,8 @@ struct stat;
 struct rtcdate;
 
 // system calls
+int trace(const char *pathname);
+int getcount(void);
 int fork(void);
 int exit(void) __attribute__((noreturn));
 int wait(void);
diff --git a/usys.S b/usys.S
index 8bfd8a1..f481423 100644
--- a/usys.S
+++ b/usys.S
@@ -8,6 +8,8 @@
     int $T_SYSCALL; \
     ret
 
+SYSCALL(trace)
+SYSCALL(getcount)
 SYSCALL(fork)
 SYSCALL(exit)
 SYSCALL(wait)
